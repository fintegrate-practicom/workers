name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - 'running-GC'

env:
  PROJECT_ID: fintegrate-f
  GAR_LOCATION: us-central1
  SERVICE: orders
  REGION: us-central1
  REPO: orders
  IMAGE: infrastructure-orders

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/927688248564/locations/global/workloadIdentityPools/workers-pool/providers/workers-provider'
          service_account: 'my-service-account@fintegrate-f.iam.gserviceaccount.com'

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Print Environment Variables
        run: |
          echo "PROJECT_ID=${{ env.PROJECT_ID }}"
          echo "GAR_LOCATION=${{ env.GAR_LOCATION }}"
          echo "SERVICE=${{ env.SERVICE }}"
          echo "REGION=${{ env.REGION }}"
          echo "REPO=${{ env.REPO }}"
          echo "IMAGE=${{ env.IMAGE }}"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ github.sha }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
